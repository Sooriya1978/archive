Um modelo estatístico é um modelo linear quando podemos escrevê-lo com uma combinação linear entre os parametros (desconhecidos) e os predictors (medidos) mais o erro.

Y_i = B0 + \sum_{j=0}^p {B1*X_{i,j}} +  \epsilon_i

j: número de predictors
X: predictors 
B: parâmetros  (desconhecidos)
Y: Observado, não depende de j. 
epsilon: erro na medida dos predictors (variabilidade devidos a outros fatores).

Estratégia muito usada para estimar os parâmetros Betas: 
Isolar os episilons de todas i equações, elevar ao quadrado, somar tudo e encontrar os valores de Betas que minimizam essa soma (soma dos quadrados dos resíduos ou RSS):
http://en.wikipedia.org/wiki/Residual_sum_of_squares

http://genomicsclass.github.io/book/pages/intro_using_regression.html
\sum_{i=1}^n = {Yi - (B0 + \sum_{j=0}^p {B1*X_{i,j}} }^2

se fosse  cálculo faríamos: derivar em relação a B e i. Mas vamos usar modelos lineares.


## Exemplos escolhidos

### Relação entre a altura de pais e filhos estuda por Galton em 1885:	

	library(UsingR)
	x=father.son$fheight
	y=father.son$sheight
	plot(x,y,xlab="Father's height",ylab="Son's height")

### Cálculo da posição em movimentos acelerados

	install.packages('devtools')
	library(devtools)
	install_github('rafalib','ririzarr')
	library(rafalib)

	#Inventando pontos
	set.seed(1)
	g <- 9.8 # m/s
	n <- 25
	tt <- seq(0,3.4,len=n) ##time in secs, t is a base function
	d <- 56.67  - 0.5*g*tt^2 + rnorm(n,sd=1)
	plot(tt,d,ylab="Distance in meters",xlab="Time in seconds")
	lines(tt,f,col=2)
LSE: equação minimos quadrados
tt2 <-tt^2
fit <- lm(y~tt+tt2)
summary(fit)$coef

Calculando a própria RSS
rss <- function(Beta0,Beta1,Beta2){
  r <- y - (Beta0+Beta1*tt+Beta2*tt^2)
  return(sum(r^2))
}

Beta2s<- seq(-10,0,len=100)
plot(Beta2s,sapply(Beta2s,rss,Beta0=55,Beta1=0),
     ylab="RSS",xlab="Beta2",type="l")
##Let's add another curve fixing another pair:
Beta2s<- seq(-10,0,len=100)
lines(Beta2s,sapply(Beta2s,rss,Beta0=65,Beta1=0),col=2)



